---

# Notes:
# Sample project C code is not presently written to produce a release artifact.
# As such, release build options are disabled.
# This sample, therefore, only demonstrates running a collection of unit tests.

:project:
  :use_exceptions: FALSE
  :use_test_preprocessor: TRUE
  :use_auxiliary_dependencies: TRUE
  :build_root: build
  :release_build: TRUE
  :test_file_prefix: test_

:release_build:
  :output: MyApp.out

:environment:
  - :pmesdr_top_dir: "#{ENV['PMESDR_TOP_DIR']}"

:extension:
  :executable: .bin

:paths:
  :test:
    - +:test/**
    - -:test/support
  :source:
    - src/**
  :support:
    - test/support
  :include:
    - ../../../include

:defines:
  # in order to add common defines:
  #  1) remove the trailing [] from the :common: section
  #  2) add entries to the :common: section (e.g. :test: has TEST defined)
  :commmon: &common_defines
  :test:
    - *common_defines
    - TEST
    - UNITY_INCLUDE_DOUBLE
    - CETB_VERSION_ID=1.4
    - SMAP_VERSION_ID=0.3
  :test_preprocess:
    - *common_defines
    - TEST

:flags:
  :test:
    :compile:
      :*:
        - -g

:cmock:
  :mock_prefix: mock_
  :when_no_prototypes: :warn
  :enforce_strict_ordering: TRUE
  :plugins:
    - :ignore
    - :callback
  :treat_as:
    uint8:    HEX8
    uint16:   HEX16
    uint32:   UINT32
    int8:     INT8
    bool:     UINT8


# Ceedling defaults to using gcc for compiling, linking, etc.
# As [:tools] is blank, gcc will be used (so long as it's in your system path)
# See documentation to configure a given toolchain for use
:tools:
  :test_linker:
    :executable: gcc
    :arguments:
      - ${1}
      - -L#{ENV['PMESDR_TOP_DIR']}/lib
      - -lutils
      - -lcalcalcs
      - -lnetcdf
      - -lhdf5_hl
      - -lhdf5
      - -lz
      - -ludunits2
      - -o ${2}      

:plugins:
  :load_paths:
    - "#{Ceedling.load_path}"
  :enabled:
    - stdout_pretty_tests_report
    - module_generator
...
